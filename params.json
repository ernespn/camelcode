{"name":"Camelcode","body":"A tech demo built on top of [Play Framework 2.0](http://www.playframework.org/) that imports the\r\n[CodePoint Open](https://www.ordnancesurvey.co.uk/opendatadownload/products.html) UK postcode dataset\r\nand offers a Geocoding RESTful API and a map. It also demonstrates how\r\n[Google Guice](http://code.google.com/p/google-guice/) can be integrated in a Play 2.0 application.\r\n\r\nPrerequisites: [MongoDB](http://www.mongodb.org/) and [Play Framework 2.0](http://www.playframework.org/).\r\n\r\n### Setup\r\n\r\nEdit `conf/application.conf` and point it to a MongoDB installation, and execute\r\n\r\n```\r\nplay run\r\n```\r\n\r\nThen put the [CodePoint Open CSVs](https://www.ordnancesurvey.co.uk/opendatadownload/products.html) (scroll halfway down, 20mb)\r\nin the `codepointopen` directory.\r\n\r\nAfter they are processed, they will be moved to the `codepointopen/done` directory.\r\n\r\nThen visit [http://localhost:9000/](http://localhost:9000/) and you should see the welcome screen.\r\nVisit [http://localhost:9000/servermetrics](http://localhost:9000/servermetrics) for server metrics.\r\n\r\n### JSON\r\n\r\nGET [http://localhost:9000/latlng/POSTCODE](http://localhost:9000/latlng/BS106TF) to geocode a UK postcode. Response will be JSON:\r\n\r\n```\r\n{\"latitude\":51.505615,\"longitude\":-2.6120315}\r\n```\r\n\r\n### Technology\r\n\r\n* [Play Framework 2.0](http://www.playframework.org/), thank god for this!\r\n* [Apache Camel](http://camel.apache.org/) to [process and monitor](https://github.com/analytically/camelcode/blob/master/app/Global.java#L103) the `codepointopen` directory and to tell the actors about the postcodes (split(body()))\r\n* [Akka 2.0](http://akka.io/) provides a nice concurrent model [to process the 1.7 million postcodes](https://github.com/analytically/camelcode/blob/master/app/actors/ProcessCodePointOpenCsv.java) in under one minute on modern hardware\r\n* [GeoTools 8](http://www.geotools.org/) [converts](https://github.com/analytically/camelcode/blob/master/app/actors/ProcessCPOCsvEntry.java#L68) the eastings/northings to latitude/longitude\r\n* [Guice](http://code.google.com/p/google-guice/) for [Dependency Injection](https://github.com/analytically/camelcode/blob/master/app/Global.java#L53) (not too much to inject yet though)\r\n* [Metrics](https://github.com/codahale/metrics) for metrics\r\n* [MongoDB](http://www.mongodb.org/) and [Morphia](http://code.google.com/p/morphia/) as storage and ORM\r\n* [Leaflet](http://leaflet.cloudmade.com/) for the map\r\n* [Twitter Bootstrap](http://twitter.github.com/bootstrap/) and [Font Awesome](http://fortawesome.github.com/Font-Awesome/) for the UI\r\n\r\n### License\r\n\r\nLicensed under the [WTFPL](http://en.wikipedia.org/wiki/WTFPL).\r\n\r\nThis data contains Ordnance Survey data &copy; Crown copyright and database right 2011. Code-Point Open contains\r\nRoyal Mail data &copy; Royal Mail copyright and database right 2011. Code-Point Open and ONSPD contains National Statistics\r\ndata &copy; Crown copyright and database right 2011.\r\n\r\nOS data may be used under the terms of the [OS OpenData licence](http://www.ordnancesurvey.co.uk/oswebsite/docs/licences/os-opendata-licence.pdf).\r\n\r\n### Todo\r\n\r\n* Fix distance calculation, Morphia does't do geoNear yet (grmbl)\r\n\r\n### Screenshots\r\n\r\n![Welcome Page](https://github.com/analytically/camelcode/raw/master/screenshot.png)\r\n\r\n![Map](https://github.com/analytically/camelcode/raw/master/screenshot2.png)","tagline":"A tech demo built on top of Play Framework 2.0 that imports the CodePoint Open UK postcode dataset and offers a Geocoding RESTful API and a postcode map.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}